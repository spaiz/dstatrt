{
  "name": "zuul",
  "version": "1.16.4",
  "description": "simple browser testing",
  "main": "lib/zuul.js",
  "dependencies": {
    "JSON2": "0.1.0",
    "batch": "0.5.0",
    "bouncy": "3.2.2",
    "browserify": "6.3.3",
    "char-split": "0.2.0",
    "colors": "0.6.2",
    "commander": "2.1.0",
    "convert-source-map": "0.4.1",
    "debug": "2.1.0",
    "express": "3.4.8",
    "express-state": "1.0.3",
    "find-nearest-file": "1.0.0",
    "firefox-profile": "0.2.7",
    "hbs": "2.4.0",
    "highlight.js": "7.5.0",
    "load-script": "0.0.5",
    "lodash": "2.4.1",
    "ngrok": "0.1.98",
    "opener": "1.4.0",
    "osenv": "0.0.3",
    "shallow-copy": "0.0.1",
    "shell-quote": "1.4.1",
    "stack-mapper": "0.2.2",
    "stacktrace-js": "github:defunctzombie/stacktrace.js#07e7b95",
    "superagent": "0.15.7",
    "superstack": "0.0.4",
    "tap-parser": "0.4.1",
    "tape": "2.3.2",
    "wd": "0.3.11",
    "xtend": "2.1.2",
    "yamljs": "0.1.4"
  },
  "devDependencies": {
    "mocha": "~1.16.2",
    "after": "~0.8.1",
    "phantomjs": "1.9.12"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/shtylman/zuul.git"
  },
  "bin": {
    "zuul": "./bin/zuul"
  },
  "keywords": [
    "zuul",
    "testing",
    "browser",
    "qunit",
    "mocha",
    "saucelabs"
  ],
  "author": {
    "name": "Roman Shtylman",
    "email": "shtylman@gmail.com"
  },
  "license": "MIT",
  "scripts": {
    "test": "DEBUG=zuul* mocha --ui qunit --timeout 0 --bail -- test/index.js"
  },
  "gitHead": "9d3a029846ccca8ca333f048e308f4e9c4f96d26",
  "readme": "# zuul [![Build Status](https://travis-ci.org/defunctzombie/zuul.svg)](https://travis-ci.org/defunctzombie/zuul)\n\nZuul is an easy way to test your javascript in browsers. Start testing your code in seconds locally and move to cloud based browsers seamlessly for better coverage.\n\nZuul is different than other cross browser test runners in its simplicity and ability to easily run your test suite in many browsers without having them installed locally. It lets you iterate quickly during development and provide good browser coverage before release without worrying about missing a supported browser.\n\nDon't just claim your js supports \"all browsers\", prove it with tests!\n\n![zuul](https://f.cloud.github.com/assets/71256/1669799/fb463296-5c81-11e3-818a-26776dc7a256.jpg)\n\n## Zuul workflow\n\nZuul works out of the box with a few commonly used javascript frameworks (qunit, mocha, tape, jasmine). If you are already testing using these, zuul setup will be trivial.\n\nZuul has 3 modes of operation: locally, cloud browsers, and continuous integration. You should make sure that zuul is working locally before you try to run the other two.\n\nOnce you have [installed](https://github.com/defunctzombie/zuul/wiki/installation) zuul proceed to the [quickstart](https://github.com/defunctzombie/zuul/wiki/quickstart) to write your first test.\n\n### Running zuul locally\n\nWhen iterating on your tests during development, simply use zuul `--local` mode to see your tests run in a browser.\n\n![local zuul](https://raw.github.com/defunctzombie/zuul/gh-pages/develop-tests-locally.png)\n\nSee the [quickstart](https://github.com/defunctzombie/zuul/wiki/quickstart) page on the wiki for more details.\n\n### Cross browser testing via Saucelabs\n\nThe reason we go through all this trouble in the first place is to seamlessly run our tests against all those browsers we don't have installed. Luckily, [saucelabs](https://saucelabs.com/) runs some browsers and we can easily task zuul to test on those.\n\n![testing in the cloud](https://raw.github.com/defunctzombie/zuul/gh-pages/double-check-with-sauce.png)\n\nSee the [cooking with sauce](https://github.com/defunctzombie/zuul/wiki/cloud-testing) wiki page to get your tests running in the cloud.\n\n### Continuous integration\n\nNo testing setup would be complete without a badge for passing or failing tests. After making sure your tests all pass in the cloud from your local machine, we will configure our tests to pass from travis-ci when we commit changes.\n\n![local zuul](https://raw.github.com/defunctzombie/zuul/gh-pages/finalize-with-travis.png)\n\nSee the [travis-ci integration](https://github.com/defunctzombie/zuul/wiki/travis-ci) wiki page.\n\n## Frameworks\n\nThe following frameworks are supported:\n\n* mocha (tdd, qunit, and bdd flavors)\n* tape\n* qunit\n* jasmine\n\n### Examples\n\nSee the examples directory for some simple tests. Use the above knowledge to test the examples with your install of zuul.\n\n* [quickstart](https://github.com/defunctzombie/zuul/tree/master/examples/quickstart) - from the [quickstart](https://github.com/defunctzombie/zuul/wiki/Quickstart) wiki tutorial\n* [emberjs with qunit](https://github.com/defunctzombie/zuul/tree/master/examples/ember_w_qunit) - basic ember.js app with qunit tests\n* [jasmine](https://github.com/defunctzombie/zuul/tree/master/examples/jasmine) - basic jasmine example\n\nAll of the examples can be tested locally by running the following command in each example directory.\n\n```\nzuul --local 8080 -- test.js\n```\n\n## zuul.yml\n\nThe zuul consumes a yaml config file. See the [zuul.yml](https://github.com/defunctzombie/zuul/wiki/zuul.yml) wiki page for all of the goodies this file provides.\n\nIt includes advanced usage like how to run an additional server to support tests that make ajax requests.\n\n## License\n\nMIT\n\n## Credits\n\nThis probject is made possible by all the awesome modules it uses. See the `package.json` file for all the awesome.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/shtylman/zuul/issues"
  },
  "homepage": "https://github.com/shtylman/zuul#readme",
  "_id": "zuul@1.16.4",
  "_shasum": "a5c1c072436bb76114d28a362d4bd85237033d5c",
  "_from": "git+https://github.com/rase-/zuul.git#9d3a02",
  "_resolved": "git+https://github.com/rase-/zuul.git#9d3a029846ccca8ca333f048e308f4e9c4f96d26"
}
